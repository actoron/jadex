description 'Jadex XML is an XML data binding framework for Java and also for other representations. The main idea of Jadex XML is that neither the XML-Schema on the one side nor the Java classes on the other side should define other binding. Instead, a separate mapping between both is used as a mediation. This allows designing the XML representation independent of the Java side but still being able to connect both as desired. ' +
		'\nThis idea was first put forward by the JiBX data binding framework. Jadex XML pushes it further by combining it with the configuration by exception principle. The framework can detect obvious correspondences between both sides automatically and only needs configuration information when translations are necessary. The configuration information is currently specified directly in form of Java configuration classes.'

//apply plugin: 'maven-publish'

dependencies 
{
	api project(':util:commons')
	api project(':serialization:traverser')
	
	// Wrong way: (doesn't work for eclipse, depends on generated jar from gradle build)
//	testImplementation files(project(':serialization:traverser').sourceSets.test.output)
//	testImplementation files(project(':serialization:traverser').sourceSets.test.runtimeClasspath)
	
	// Correct(?) way: (project dependency correctly interpreted by eclipse import as well as gradle build)
	// currently broken in newer gradles :( >= 6.7 https://github.com/eclipse/buildship/issues/1035
	// This now works in 7+
	testImplementation(testFixtures(project(':serialization:traverser')))
}
//publishing
//{
//   publications 
//    {
//        mavenJava(MavenPublication) 
//        {
//            from components.java
//        }
//    }
//}

