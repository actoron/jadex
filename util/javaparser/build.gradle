description 'The Jadex Java parser allows arbitrary Java terms being parsed. The parser accepts input that can be written as right hand side of a Java assignment (exp = term), i.e. procedural language aspects like loops or branches.'

dependencies
{
	api project(':util:commons')
}

// Skip javacc tasks to avoid git crlf issues unless a javacc task is explicitly given as gradle command like so:
// ./gradlew compileJavacc
def javacctasks	= ["compileJavacc", "compileJjtree"] as Set
tasks.whenTaskAdded{ task ->
	if( javacctasks.contains(task.name)
		&& !project.gradle.startParameter.taskNames.any {taskname ->
			return javacctasks.any {taskname.contains(it) } }) {
	
		task.enabled = false
		println "Disabled $task"
	}
}

// Generate into 'src' folder instead of 'build' to be checked into repo
def javaccOutputDirectory	= file('src/generated/javacc')
def jjtreeOutputDirectory	= file('src/generated/jjtree')

// JavaCC plugin and settings
apply plugin: 'ca.coglinc.javacc'
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath group: 'ca.coglinc', name: 'javacc-gradle-plugin', version: '2.4.0'
		classpath group: 'net.java.dev.javacc', name: 'javacc', version: '3.2'
	}
}
compileJavacc.outputDirectory	= javaccOutputDirectory
compileJjtree.outputDirectory	= jjtreeOutputDirectory

// Use parser generator ouput dirs as src dirs for java compilation (e.g. eclipse import)
sourceSets {
	main {
		java {
			srcDir javaccOutputDirectory
			srcDir jjtreeOutputDirectory
		}
	}
}
