<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>Intelligent hunter using a search algorithm.</H3>
	
	Includes the Act-Sense-Capability and defines the required beliefs.
	Uses Joint Field as internal world model.
-->
<agent xmlns="http://www.activecomponents.org/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-bdi
	                    http://www.activecomponents.org/jadex-bdi-${jadex_build_version}.xsd"
	name="LAHunter"
	package="jadex.bdi.examples.hunterprey_classic.creature.hunters.ldahunter">

	<imports>
		<import>jadex.bdi.examples.hunterprey_classic.*</import>
		<import>jadex.bdi.examples.hunterprey_classic.creature.hunters.ldahunter.potentialfield.*</import>
		<import>jadex.runtime.*</import>
		<import>jadex.bridge.fipa.*</import>
	</imports>

	<capabilities>
		<capability name="actsensecap" file="jadex.bdi.examples.hunterprey_classic.creature.actsense.Creature"/>
	</capabilities>

	<beliefs>
		<!-- The df to search for the environment.
			Remove this belief to connect to a local environment.  - ->
		<belief name="df" class="AID" ref="actsensecap.df">
			<fact>
				SJade.createAID("df@vsispro3:1099/JADE",
					"http://134.100.11.53:7778/acc")
			</fact>
		</belief>   -->

		<!-- The creature. -->
		<beliefref name="my_self">
			<concrete ref="actsensecap.my_self"/>
		</beliefref>

		<belief name="last_direction" class="String"/>

		<belief name="next_sheep" class="Prey" evaluationmode="pull">
			<fact>
				select one Prey $prey
				from $beliefbase.preys
				where $beliefbase.my_self.isInVisionRange($prey.getLocation())
				order by $prey.getDistance($beliefbase.my_self)
			</fact>
		</belief>

		<belief name="potential_field" class="JointField">
			<fact>
				new JointField (30,30,3,new Evaluator(0.0, 1.0, 0.0, 0.001))
		    </fact>
		</belief>

		<!-- 
		<belief name="potential_window" class="PotentialFrame">
			<fact>
				new PotentialFrame($scope.getExternalAccess(), "Classic world of "+$beliefbase.my_self.getName())
			</fact>
		</belief>
		 -->
		
		<belief name="gui" class="jadex.commons.gui.GuiCreator">
			<fact>new jadex.commons.gui.GuiCreator(PotentialFrame.class, new Class[]{jadex.bridge.IExternalAccess.class, java.lang.String.class}, 
				new Object[]{$scope.getExternalAccess(), "Classic world of "+$beliefbase.my_self.getName()})</fact>
		</belief>

		<!-- The following beliefs are automatically updated by the capability. -->

		<!-- The current vision. -->
		<beliefref name="vision">
			 <concrete ref="actsensecap.vision"/>	
		</beliefref>

		<!-- The known preys. -->
		<beliefsetref name="preys" >
  			<concrete ref="actsensecap.preys"/>
		</beliefsetref>

		<!-- The known hunters. -->
		<beliefsetref name="hunters">
  			<concrete ref="actsensecap.hunters"/>
		</beliefsetref>

		<!-- The known obstacles. -->
		<beliefsetref name="obstacles" >
  			<concrete ref="actsensecap.obstacles"/>
		</beliefsetref>

		<!-- The known food. -->
		<beliefsetref name="food">
  			<concrete ref="actsensecap.food"/>
		</beliefsetref>

	</beliefs>

	<goals>
		<performgoal name="hunt" retry="true" exclude="never"/>

		<achievegoalref name="move">
			<concrete ref="actsensecap.move"/>
		</achievegoalref>

		<achievegoalref name="eat">
			<concrete ref="actsensecap.eat"/>
		</achievegoalref>
	</goals>

	<plans>
		<plan name="do_hunt">
			<body class="HuntPlan"/>
			<trigger><goal ref="hunt"/></trigger>
		</plan>
	</plans>
	
<!--	<properties>
        <property name="tracing.goals">"*"</property>
        <property name="tracing.plans">"*"</property>
        <property name="tracing.beliefs">"*"</property> 
        <property name="tracing.messages">new MessageFilter(MessageTemplate.MatchAll())</property>
    </properties>-->

	<configurations>
		<configuration name="default">
			<beliefs>
				<initialbelief ref="my_self">
					<fact>new Hunter($scope.getAgentName(), $scope.getComponentIdentifier(), new Location(10,10))</fact>
				</initialbelief>
			</beliefs>
			<goals>
				<initialgoal ref="hunt"/>
			</goals>
		</configuration>
	</configurations>

</agent>



