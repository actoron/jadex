<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>Commander</H3>

	Coordinates entities to efficiently handle disasters.
-->
<agent xmlns="http://www.activecomponents.org/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-bdi
	                    http://www.activecomponents.org/jadex-bdi-${jadex_build_version}.xsd"
	name="Commander2"
	package="jadex.bdi.examples.disastermanagement.commander2">

	<imports>
		<import>jadex.commons.future.*</import>
		<import>java.util.*</import>
		<import>java.util.logging.*</import>
		<import>jadex.bridge.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.bridge.fipa.*</import>
		<import>jadex.extension.envsupport.environment.*</import>
		<import>jadex.extension.envsupport.environment.space2d.*</import>
		<import>jadex.bdiv3.runtime.*</import>
		<import>jadex.bdiv3.runtime.impl.ServiceCallPlan</import>
		<import>jadex.bdi.examples.disastermanagement.*</import>
		<import>jadex.bdi.examples.disastermanagement.movement.*</import>
	</imports>

	<beliefs>
		<!-- Environment imported inherited from move capability. -->
		<belief name="environment" class="ContinuousSpace2D">
 			<fact class="ContinuousSpace2D">jadex.application.EnvironmentService.getSpace($component, "my2dspace").get()</fact>
		</belief>
		
		<!-- Required to have disasters in OAV state. -->
 		<beliefset name="disasters" class="ISpaceObject" updaterate="1000">
			<facts>$beliefbase.environment.getSpaceObjectsByType("disaster")</facts>
		</beliefset>

	</beliefs>

	<goals>
		<achievegoal name="handle_disaster">
			<parameter name="disaster" class="ISpaceObject">
				<value>$disaster</value>
			</parameter>
			<unique/>
			<!-- Create one goal for each known disaster. -->
			<creationcondition language="jcl">
				ISpaceObject $disaster &amp;&amp; $disaster.getType().equals("disaster") &amp;&amp;
				($disaster.fire!=0 || $disaster.victims!=0 || $disaster.chemicals!=0)
			</creationcondition>
			<deliberation>
				<inhibits ref="handle_disaster">
					$goal.disaster.severe &amp;&amp; $ref.disaster.severe==false
				</inhibits>
			</deliberation>
			<targetcondition>
				$goal.disaster.fire==0 &amp;&amp; $goal.disaster.victims==0 &amp;&amp; $goal.disaster.chemicals==0
			</targetcondition>
		</achievegoal>
		
		<achievegoal name="clear_chemicals" exclude="never" retrydelay="1000">
			<parameter name="disaster" class="ISpaceObject"/>
			<deliberation>
				<inhibits ref="treat_victims">
					$goal.disaster==$ref.disaster
				</inhibits>
			</deliberation>
		</achievegoal>
		
		<achievegoal name="extinguish_fires" exclude="never" retrydelay="1000">
			<parameter name="disaster" class="ISpaceObject"/>
		</achievegoal>
		
		<achievegoal name="treat_victims" exclude="never" retrydelay="1000">
			<parameter name="disaster" class="ISpaceObject"/>
		</achievegoal>
	</goals>
	
	<plans>
		<!-- Plan for handling situations at a disaster. -->
		<plan name="handle_disaster_plan">
			<parameter name="disaster" class="ISpaceObject">
				<goalmapping ref="handle_disaster.disaster"/>
			</parameter>
			<body class="HandleDisasterPlan"/>
			<trigger>
				<goal ref="handle_disaster"/>
			</trigger>
		</plan>
		
		<!-- Plan for calling a clear chemicals service. -->
		<plan name="clear_chemicals_service_call_plan">
			<parameter name="disaster" class="ISpaceObject">
				<goalmapping ref="clear_chemicals.disaster"/>
			</parameter>
			<body service="clearchemicalsservices" method="clearChemicals"/>
			<trigger>
				<goal ref="clear_chemicals"/>
			</trigger>
		</plan>
		
		<!-- Plan for calling a extinguish fire service. -->
		<plan name="extinguish_fire_service_call_plan">
			<parameter name="disaster" class="ISpaceObject">
				<goalmapping ref="extinguish_fires.disaster"/>
			</parameter>
			<body service="extinguishfireservices" method="extinguishFire"/>
			<trigger>
				<goal ref="extinguish_fires"/>
			</trigger>
		</plan>
		
		<!-- Plan for calling a treat victims service. -->
		<plan name="treat_victims_service_call_plan">
			<parameter name="disaster" class="ISpaceObject">
				<goalmapping ref="treat_victims.disaster"/>
			</parameter>
			<body service="treatvictimservices" method="treatVictims"/>
			<trigger>
				<goal ref="treat_victims"/>
			</trigger>
		</plan>
	</plans>
	
	<services>
		<requiredservice name="treatvictimservices" class="ITreatVictimsService" />
		<requiredservice name="extinguishfireservices" class="IExtinguishFireService" />
<!-- 			<binding selector="BrigadeSelector"/>
		</requiredservice> -->
		<requiredservice name="clearchemicalsservices" class="IClearChemicalsService" />
<!-- 			<binding selector="BrigadeSelector"/>
		</requiredservice> -->
	</services>
</agent>
