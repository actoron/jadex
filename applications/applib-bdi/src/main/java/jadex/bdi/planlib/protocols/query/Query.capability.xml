<?xml version="1.0" encoding="UTF-8"?>
<!--
	The query capability enables an easy goal-driven usage of
	the FIPA query protocol.
-->
<capability xmlns="http://www.activecomponents.org/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-bdi
	                    http://www.activecomponents.org/jadex-bdi-${jadex_build_version}.xsd"
	package="jadex.bdi.planlib.protocols.query"
	name="Query">

	<imports>
		<import>jadex.bridge.fipa.*</import>
		<import>jadex.bdiv3.runtime.*</import>
		<import>jadex.bdiv3x.runtime.*</import>
		<import>jadex.bdi.planlib.protocols.*</import>
		<import>java.util.*</import>
		<import>jadex.commons.IFilter</import>
		<import>jadex.base.Starter</import>
	</imports>
	
	<capabilities>
		<capability name="cmcap" file="jadex.bdi.planlib.protocols.cancelmeta.CancelMeta"/>
	</capabilities>

	<beliefs>
		<!-- Timeout for messages. -->
		<belief name="timeout" class="Long" exported="true">
			<fact>Starter.getDefaultTimeout($scope.getComponentIdentifier())</fact>
		</belief>

		<!-- Filters are only relevant for the participants protocol side. -->

		<!-- The filter for deciding which initial query messages are handled in this capability. -->
		<belief name="qp_filter" class="IFilter" exported="true">
			<fact>IFilter.NEVER</fact>
		</belief>
	</beliefs>

	<goals>
		<!-- FIPA request protocol. -->

		<!-- (Initiator side) Initiate a conversation using the fipa-query protocol. -->
		<achievegoal name="qp_initiate" exported="true">
			<!-- The receiver of the request. -->
			<parameter name="receiver" class="jadex.bridge.IComponentIdentifier"/>
			<!-- The requested action. -->
			<parameter name="action" class="Object"/>
			<!-- Optional ontology for marshalling. -->
			<parameter name="ontology" class="String" optional="true"/>
			<!-- Optional language for marshalling. -->
			<parameter name="language" class="String" optional="true"/>
			<!-- Optional conversation id. -->
			<parameter name="conversation_id" class="String" optional="true"/>
			<!-- The optional request timeout. -->
			<parameter name="timeout" class="Long" optional="true"/>
			<!-- The result of the request. -->
			<parameter name="result" class="Object" direction="out"/>
			<!-- The interaction state. -->
			<parameter name="interaction_state" class="InteractionState" direction="inout">
				<value>new InteractionState()</value>
			</parameter>
		</achievegoal>

		<!-- (Participant side) Query protocol interaction goal (top-level goal of all receiver-side interactions). -->
		<performgoal name="qp_receiver_interaction" retry="false" exported="true">
			<!-- The message that initiated the protocol. -->
			<parameter name="message" class="IMessageEvent"/>
			<!-- The interaction description (content of first message). -->
			<parameter name="interaction_description" class="Object" direction="out"/>
			<!-- The interaction state. -->
			<parameter name="interaction_state" class="InteractionState" direction="inout">
				<value>new InteractionState()</value>
			</parameter>
			<!-- The interaction result. -->
			<parameter name="result" class="Object" direction="out"/>
		</performgoal>

		<!-- (Participant side) Decide upon a requested information will be sent. -->
		<querygoal name="qp_decide_request" exported="true">
			<!-- The requested action. -->
			<parameter name="action" class="Object"/>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier"/>
			<!-- True, if request should be done and agree message should be sent. -->
			<parameter name="accept" class="Boolean" direction="out"/>
		</querygoal>

		<!-- (Participant side) Execute the requested task. -->
		<achievegoal name="qp_execute_request" exported="true">
			<!-- The requested action. -->
			<parameter name="action" class="Object"/>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier"/>
			<!-- The result of the request. -->
			<parameter name="result" class="Object" direction="out" optional="true"/>
		</achievegoal>

		<!-- Generic goals. -->

		<!-- A subgoal that can be posted to trigger  to protocol specific
			 interaction handling. Should be used when implementing custom
			 plan for receiver interaction goal. -->
		<performgoal name="perform_interaction" retry="false" exported="true">
			<!-- The message should be assign from the superordinated goal. -->
			<parameter name="message" class="IMessageEvent"/>
			<!-- The interaction description (content of first message). -->
			<parameter name="interaction_description" class="Object" direction="out"/>
			<!-- The interaction state should be assign from the superordinated goal. -->
			<parameter name="interaction_state" class="InteractionState" direction="inout"/>
			<!-- The result should be passed back to the superordinated goal. -->
			<parameter name="result" class="Object" direction="out"/>
		</performgoal>

	</goals>

	<plans>
		<!-- FIPA Request Protocol Plans -->
	
		<plan name="qp_initiator_plan">
			<parameter name="receiver" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="qp_initiate.receiver"/>
			</parameter>
			<parameter name="action" class="Object">
				<goalmapping ref="qp_initiate.action"/>
			</parameter>
			<parameter name="ontology" class="String">
				<goalmapping ref="qp_initiate.ontology"/>
			</parameter>
			<parameter name="language" class="String">
				<goalmapping ref="qp_initiate.language"/>
			</parameter>
			<parameter name="conversation_id" class="String">
				<goalmapping ref="qp_initiate.conversation_id"/>
			</parameter>
			<parameter name="timeout" class="Long">
				<goalmapping ref="qp_initiate.timeout"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="qp_initiate.result"/>
			</parameter>
			<parameter name="interaction_state" class="InteractionState" direction="inout">
				<goalmapping ref="qp_initiate.interaction_state"/>
			</parameter>
			<parameter name="protocol" class="String">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<body class="RPQPInitiatorPlan" />
			<trigger>
				<goal ref="qp_initiate"/>
			</trigger>
		</plan>
		
		<!-- Interaction goal creation plan. -->
		<plan name="qp_interaction_goal_creation_plan">
			<parameter name="goaltype" class="String">
				<value>"qp_receiver_interaction"</value>
			</parameter>
			<body class="InteractionGoalCreationPlan" />
			<trigger>
				<messageevent ref="qp_request"/>
				<!-- <messageevent ref="qp_query_if"/> -->
				<!-- <messageevent ref="qp_query_ref"/> -->
			</trigger>
		</plan>

		<plan name="qp_receiver_plan" priority="-1">
			<parameter name="message" class="IMessageEvent">
				<goalmapping ref="qp_receiver_interaction.message"/>
				<goalmapping ref="perform_interaction.message"/>
			</parameter>
			<parameter name="interaction_state" class="InteractionState" direction="inout">
				<goalmapping ref="qp_receiver_interaction.interaction_state"/>
				<goalmapping ref="perform_interaction.interaction_state"/>
			</parameter>
			<parameter name="interaction_description" class="Object" direction="out">
				<goalmapping ref="qp_receiver_interaction.interaction_description"/>
				<goalmapping ref="perform_interaction.interaction_description"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="qp_receiver_interaction.result"/>
				<goalmapping ref="perform_interaction.result"/>
			</parameter>
			<parameter name="protocol" class="String">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<body class="RPQPReceiverPlan" />
			<trigger>
				<goal ref="qp_receiver_interaction"/>
				<goal ref="perform_interaction">
					<match>SFipa.PROTOCOL_QUERY.equals($goal.message.getParameter(SFipa.PROTOCOL).getValue())</match>
				</goal>
			</trigger>
		</plan>
		
	</plans>

	<events>
		<messageevent name="qp_request" type="fipa" exported="true">
			<parameter name="performative" class="String">
				<value>SFipa.QUERY_IF</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="conversation_id" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
			</parameter>
			<match>$beliefbase.qp_filter.filter($messagemap) &amp;&amp; $conversation_id!=null
				&amp;&amp; (SFipa.QUERY_IF.equals($performative) || SFipa.QUERY_REF.equals($performative))</match>
		</messageevent> 
		
	<!--  <messageevent name="qp_request" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.QUERY_IF</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="conversation_id" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
			</parameter>
			<match>$beliefbase.qp_filter.filter($messagemap) &amp;&amp; $conversation_id!=null</match>
		</messageevent> -->
		
		<!-- <messageevent name="qp_query_if" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.QUERY_IF</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="conversation_id" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
			</parameter>
			<match>$beliefbase.qp_filter.filter($messagemap) &amp;&amp; $conversation_id!=null</match>
		</messageevent> -->
		
		<!-- <messageevent name="qp_query_ref" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.QUERY_REF</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="conversation_id" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
			</parameter>
			<match>$beliefbase.qp_filter.filter($messagemap) &amp;&amp; $conversation_id!=null</match>
		</messageevent> -->

		<messageevent name="qp_agree" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.AGREE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="qp_refuse" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REFUSE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="qp_failure" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.FAILURE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="qp_not_understood" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.NOT_UNDERSTOOD</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="qp_inform" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_QUERY</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>
		
	</events>
	
	<properties>
		<!-- <property name="logging.level">java.util.logging.Level.INFO</property>  -->
	</properties>

</capability>
