<?xml version="1.0" encoding="UTF-8"?>
<!-- <H3>The Show Room for random 3D Spaceobjects</H3> 3D Showroom of Spaceobjects 
	created by us or licensed under Creative Commons Attribution 3.0 <br><br> 
	Shortkeys: <br> F8 - Grid On/OFF<br> F3 - Chase Cam ON/OFF<br> F4 - Follow 
	Cam ON/OFF<br> F5 - Informations ON/OFF<br> -->
<applicationtype xmlns="http://www.activecomponents.org/jadex-application"
	xmlns:agr="http://www.activecomponents.org/jadex-agrspace" xmlns:env="http://www.activecomponents.org/jadex-envspace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-application 
	                    http://www.activecomponents.org/jadex-application-${jadex_build_version}.xsd
	                    http://www.activecomponents.org/jadex-agrspace 
	                    http://www.activecomponents.org/jadex-agrspace-${jadex_build_version}.xsd
	                    http://www.activecomponents.org/jadex-envspace 
	                    http://www.activecomponents.org/jadex-envspace-${jadex_build_version}.xsd"
	name="ShowAnimation" package="jadex.micro.showrooms">

	<imports>
		<import>jadex.extension.envsupport.environment.space3d.*</import>
		<import>jadex.extension.envsupport.environment.DeltaTimeExecutor</import>
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.extension.envsupport.dataview.*</import>
		<import>java.text.SimpleDateFormat</import>
		<import>java.util.Date</import>
		<import>jadex.extension.envsupport.observer.perspective.*</import>
		<import>jadex.micro.rotation.*</import>
		<import>jadex.extension.envsupport.evaluation.*</import>
		<import>jadex.extension.envsupport.observer.gui.plugin.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.bridge.service.search.*</import>
		<import>jadex.bridge.service.types.clock.IClockService</import>
	</imports>

	<extensiontypes>
		<env:envspacetype name="3dspace" class="ContinuousSpace3D" width="1" height="1" depth="1">
			
			<env:objecttypes>
				<env:objecttype name="character">
					<env:property name="status" class="String">"idle"
					</env:property>
					<env:property name="position" class="Object">new Vector3Double(0.0,0.0,0.0)
					</env:property>
				</env:objecttype>
				
				<env:objecttype name="character02">
					<env:property name="status" class="String">"idle"
					</env:property>
					<env:property name="position" class="Vector3Double">new Vector3Double(2.0,0.0,2.0)
					</env:property>
				</env:objecttype>
			</env:objecttypes>

			<!--  
			<env:tasktypes>
				<env:tasktype name="rotation" class="RotationTask" />
			</env:tasktypes>
			-->

			<env:dataviews>
				<env:dataview name="all_view" class="GeneralDataView3D" />
			</env:dataviews>

			<env:perspectives>
				<env:perspective3d name="Complex3D" class="Perspective3D">
				
				<env:drawable3d objecttype="static" hasSpaceobject="false" width="1" height="1" depth="1">
				<env:property name="rotate90" dynamic="false">new Vector3Double((Math.PI/180)*90, 0, 0)</env:property>
					<env:box  width="10" height="0.01" depth="10" x="-1" y="-0.75" z="1" color="#D2B48CFF" shadowtype="Receive"/>

				</env:drawable3d>

					<env:drawable3d objecttype="character" width="1" height="1" depth="1" rotation3d="true">
					<env:property name="rotate45y" dynamic="false">new Vector3Double(0, (Math.PI/180)*45, 0)</env:property>
						<env:object3d height="0.3" width="0.3" depth="0.3" rotation="rotate45y" modelpath="jadex3d/models/characters/jmonkey/sinbad/sinbad.j3o" hasLightMaterials="true" shadowtype="Cast">
							<env:animation name="RunBase" channel="base" loop="false">
								<env:animationcondition>$object.getProperty("status").equals("Walk")</env:animationcondition>
							</env:animation>
							<env:animation name="RunTop" channel="top" loop="false">
								<env:animationcondition>$object.getProperty("status").equals("Walk")</env:animationcondition>
							</env:animation>
							
							<env:animation name="Dance" channel="top" loop="true">
								<env:animationcondition>$object.getProperty("status").equals("idle")</env:animationcondition>
							</env:animation>
							 
							<env:animation name="RunBase" channel="base" loop="true">
								<env:animationcondition>$object.getProperty("status").equals("idle")</env:animationcondition>
							</env:animation>
							
						</env:object3d>
						
						
						
					</env:drawable3d>
					
					<env:drawable3d objecttype="character02" width="1" height="1" depth="1" rotation3d="true">
					<env:property name="rotate45y" dynamic="false">new Vector3Double(0, (Math.PI/180)*45, 0)</env:property>
	
						
					</env:drawable3d>
				</env:perspective3d>
			</env:perspectives>

			<!-- executor -->
			<env:spaceexecutor class="DeltaTimeExecutor">
				<env:property name="space">$space</env:property>
				<env:property name="tick">true</env:property>
			</env:spaceexecutor>
		</env:envspacetype>
	</extensiontypes>

	<properties>
		<property name="clock" class="IFuture">
			SServiceProvider.getService($component,
			IClockService.class, ServiceScope.PLATFORM)
		</property>
	</properties>

	<configurations>
		<configuration name="Default">
			<extensions>
				<env:envspace name="my3dspace" type="3dspace">
					<env:objects>
						<env:object type="character">
						</env:object>

						<env:object type="character02">
						</env:object>
					</env:objects>

					<env:observers>
						<env:observer name="MarsWorld" dataview="view_all"
							perspective="Complex3D">
						</env:observer>
					</env:observers>
				</env:envspace>
			</extensions>
		</configuration>
	</configurations>
</applicationtype>
