<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>The Show Room for Medieval 3D Spaceobjects</H3>

	3D Showroom of Medieval 3D Characters created and animated by Botanicus (http://opengameart.org/users/botanic) under Creative Commons
Attribution 3.0 and converted by us for the use in JMonkey<br><br>
	
	Shortkeys: <br>
	F8 - Grid On/OFF<br>
	F3 - Chase Cam ON/OFF<br>
	F4 - Follow Cam ON/OFF<br>
	F5 - Informations ON/OFF<br>
	
-->
<applicationtype xmlns="http://www.activecomponents.org/jadex-application"
	xmlns:agr="http://www.activecomponents.org/jadex-agrspace"
	xmlns:env="http://www.activecomponents.org/jadex-envspace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-application 
	                    http://www.activecomponents.org/jadex-application-${jadex_build_version}.xsd
	                    http://www.activecomponents.org/jadex-agrspace 
	                    http://www.activecomponents.org/jadex-agrspace-${jadex_build_version}.xsd
	                    http://www.activecomponents.org/jadex-envspace 
	                    http://www.activecomponents.org/jadex-envspace-${jadex_build_version}.xsd"
	name="ShowRoomCharMedieval" package="jadex.micro.showrooms">
	
	<imports>
		<import>jadex.extension.envsupport.environment.space3d.*</import>
		<import>jadex.extension.envsupport.environment.DeltaTimeExecutor</import>
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.extension.envsupport.dataview.*</import>
		<import>java.text.SimpleDateFormat</import>
		<import>java.util.Date</import>
		<import>jadex.extension.envsupport.observer.perspective.*</import>
		<import>jadex.micro.showrooms.*</import>
		<import>jadex.extension.envsupport.evaluation.*</import>
		<import>jadex.extension.envsupport.observer.gui.plugin.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.bridge.service.search.*</import>
		<import>jadex.bridge.service.types.clock.IClockService</import>
	</imports>
	
	<arguments>
		<argument name="types" class="String[]">
			new String[]{"jadex3d/models/characters/medieval/archer/archer.j3o", 
			"jadex3d/models/characters/medieval/berzerk/berzerk.j3o", 
			"jadex3d/models/characters/medieval/cerberus/cerberus.j3o", 
			"jadex3d/models/characters/medieval/diablous/diablous.j3o",
			 "jadex3d/models/characters/medieval/femalemage/femalemage.j3o",
			 "jadex3d/models/characters/medieval/femalepriest/femalepriest.j3o",
			 "jadex3d/models/characters/medieval/knight/knight.j3o",
			 "jadex3d/models/characters/medieval/mage/mage.j3o"}
			 
		</argument>
		
		<argument name="size" class="Vector3Double[]">
			new Vector3Double[]{new Vector3Double(0.1), 
			new Vector3Double(0.1), 
			new Vector3Double(0.05), 
			new Vector3Double(0.1),
			new Vector3Double(0.1),
			new Vector3Double(0.1),
			new Vector3Double(0.1),
			new Vector3Double(0.05)}
		</argument>
		<argument name="posloc" class="Vector3Double[]">
			new Vector3Double[]{new Vector3Double(0.0,0.5,0.0), 
			new Vector3Double(0.0,0.45,0.0), 
			new Vector3Double(0.0,0.65,0.0), 
			new Vector3Double(0.0,0.5,0.0), 
			new Vector3Double(0.0,0.6,0.0),
			new Vector3Double(0.0,0.5,0.0),
			new Vector3Double(0.0,0.5,0.0),
			new Vector3Double(0.0,0.5,0.0)}
		</argument>
	</arguments>
	
	<extensiontypes>
		

		<env:envspacetype name="3dspace" class="ContinuousSpace3D" width="1" height="1" depth="1">
			<env:objecttypes>
				<env:objecttype name="rotationplattform">
				<env:property name="tick360" class="int" dynamic="true">$properties.clock.getTick()%360
				</env:property>	
				<env:property name="type" class="String">"jadex3d/models/space/misc/rock01.j3o"</env:property>
				<env:property name="status" class="String">"Walk"</env:property>
				<env:property name="size" class="Vector3Double">new Vector3Double(0.1,0.1,0.1)</env:property>
				<env:property name="posloc" class="Vector3Double">new Vector3Double(0.0,0.0,0.0)</env:property>
				<env:property name="rota" class="IVector3" dynamic="true">$object.getProperty("rotation")</env:property>
			 
				</env:objecttype>
				
			</env:objecttypes>		
			
			<env:tasktypes>
				<env:tasktype name="rotation" class="RotationTask" />
			</env:tasktypes>	
						
			<env:dataviews>
				<env:dataview name="all_view" class="GeneralDataView3D" />
			</env:dataviews>

			<env:perspectives>
			<env:perspective3d name="Complex3D" class="Perspective3D">
				<env:drawable3d objecttype="rotationplattform" width="0.2" height="0.2" depth="0.2" rotation3d="false">
					<env:object3d size="size" position="posloc" modelpath="type" hasLightMaterials="true"> 
						<env:animation name="Walk" channel="chanA" loop="true">
						<env:animationcondition>$object.getProperty("status").equals("Walk")</env:animationcondition>
						</env:animation>
						<env:animation name="Idle" channel="chanA" loop="true">
						<env:animationcondition>$object.getProperty("status").equals("Idle")</env:animationcondition>
						</env:animation>
						<env:animation name="Attack" channel="chanA" loop="false">
						<env:animationcondition>$object.getProperty("status").equals("Attack")</env:animationcondition>
						</env:animation>
				</env:object3d>
				</env:drawable3d>
			</env:perspective3d>	
			</env:perspectives>
				

			<!-- executor -->
			<env:spaceexecutor class="DeltaTimeExecutor">
				<env:property name="space">$space</env:property>
				<env:property name="tick">true</env:property>
			</env:spaceexecutor>
		</env:envspacetype>
	</extensiontypes>


	
	<properties>
		<property name="clock" class="IFuture">
			$component.getFeature(jadex.bridge.service.component.IRequiredServicesFeature.class).searchService( new ServiceQuery( IClockService.class, ServiceScope.PLATFORM))
		</property>
	</properties>

	<configurations>
 		<configuration name="Default">
			<extensions>
				<env:envspace name="my3dspace" type="3dspace">
					<env:objects>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[0]</env:property>
							<env:property name="posloc">$args.posloc[0]</env:property>
							<env:property name="size">$args.size[0]</env:property>
							<env:task type="rotation"/>
						</env:object>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[1]</env:property>
							<env:property name="posloc">$args.posloc[1]</env:property>
							<env:property name="size">$args.size[1]</env:property>
							<env:task type="rotation"/>
						</env:object>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[2]</env:property>
							<env:property name="posloc">$args.posloc[2]</env:property>
							<env:property name="size">$args.size[2]</env:property>
							<env:task type="rotation"/>
						</env:object>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[3]</env:property>
							<env:property name="posloc">$args.posloc[3]</env:property>
							<env:property name="size">$args.size[3]</env:property>
							<env:task type="rotation"/>
						</env:object>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[4]</env:property>
							<env:property name="posloc">$args.posloc[4]</env:property>
							<env:property name="size">$args.size[4]</env:property>
							<env:task type="rotation"/>
						</env:object>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[5]</env:property>
							<env:property name="posloc">$args.posloc[5]</env:property>
							<env:property name="size">$args.size[5]</env:property>
							<env:task type="rotation"/>
						</env:object>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[6]</env:property>
							<env:property name="posloc">$args.posloc[6]</env:property>
							<env:property name="size">$args.size[6]</env:property>
							<env:task type="rotation"/>
						</env:object>
						<env:object type="rotationplattform">
							<env:property name="type">$args.types[7]</env:property>
							<env:property name="posloc">$args.posloc[7]</env:property>
							<env:property name="size">$args.size[7]</env:property>
							<env:task type="rotation"/>
						</env:object>
					
					</env:objects>
			
					<env:observers>
						<env:observer name="MarsWorld" dataview="view_all" perspective="Complex3D">
						</env:observer>
					</env:observers>
	 			</env:envspace>
			</extensions>
			 
 		</configuration>
 		
 		
 	

	</configurations>

</applicationtype>
